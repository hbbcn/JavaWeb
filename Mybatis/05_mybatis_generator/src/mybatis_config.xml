<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
      1、mybatis可以使用properties来引入外部properties配置文件内容
        resource: 引入类路径下的资源
        url: 引入网络路径或者磁盘路径下的资源
    -->
    <properties resource="dbconfig.properties"></properties>
    <!--
        2、setting包含很多重要的设置项

    -->

   <settings>
        <!--驼峰命名-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
       
       <!--显示的指定每个我们需要更改的配置的值，即使是默认的，防止版本更新问题-->

       <setting name="jdbcTypeForNull" value="NULL"/>
       <setting name="cacheEnabled" value="true"></setting>
       <!--延迟加载的全局开关，当开启时 所有关联的对象都会延迟加载-->

       <setting name="lazyLoadingEnabled" value="true"></setting>
       <!--当开启时，任何方法的调用都会加载该对象的的所有属性。否者每个属性会按需加载-->
       <setting name="aggressiveLazyLoading" value="false"></setting>
    </settings>


    <!-- 3、typeAliases, 别名处理器，可以为我们的java类型起别名-->
    <typeAliases>
        <!--
        typeAlias:为某个java类型起别名
        别名不区分大小写
        type:指定要起别名的类型全类名；默认别名就是类名小写；employee
        alias:指定新的别名
    -->
        <!--<typeAlias type="com.atguigu.mybatis.Employee" alias="emp"/>-->
        <!--package批量起别名
            name:指定包名（为当前包以及下面所有的后代包的每一个类都起一个默认别名）
        -->
        <!--扫描包下的所有xml文件-->
        <package name="com.atguigu.mybatis"/>
    </typeAliases>

    <plugins>
        <plugin interceptor="com.atguigu.dao.MyFirstPlugin">
            <property name="username" value="root"/>
            <property name="password" value="root"/>
        </plugin>
    </plugins>

    <!--
        4、environments环境们，mybatis可以配置多种环境，default指定使用某种环境
            |—— environment:配置一个具体的环境信息，必须有两个标签：id代表当前环境的唯一标识
                     |—— transactionManager 事务管理器
                            |—— type: 事务管理器的类型：JDBC|MANAGER

                      自定义事务管理器
                      dataSource:数据源
                            |—— type:数据源类型：UNPOOLED|POOLED|JNDI
                            自定义数据源


     -->
    <environments default="mysql">

        <environment id="oracle">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${orcl.driver}"/>
                <property name="url" value="${orcl.url}"/>
                <property name="username" value="${orcl.username}"/>
                <property name="password" value="${orcl.password}"/>
            </dataSource>
        </environment>

        <environment id="mysql">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 5、databaseIdProvider,支持多数据库厂商
            type="DB_VENDOR"
            作用是得到数据库厂商的标识(驱动)，mybatis就能根据数据库厂商标识来执行不同的sql
    -->
    <databaseIdProvider type="DB_VENDOR">
        <!-- 为不同的数据库厂商起别名-->
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
        <property name="SQL Server" value="sqlserver"/>
    </databaseIdProvider>

    <!-- 将我们写好的sql映射文件一定要注册到全局配置文件中-->
    <!--
        mapper:注册一个sql映射
                注册配置文件
                resource:引用类路径下的sql映射文件
                url:引用网络路径或者磁盘路径下的sql映射文件

                注册接口：
                class:引用（注册）接口
                    1、在sql映射文件，映射文件必须和接口同名，并且放在与接口同一目录下
                    2、没有sql映射文件，所有的sql都是利用注解写在接口上
                    推荐：
                            比较重要的，复杂的Dao接口我们来写sql映射文件
                            不重要的，简单的Dao接口为了开发快速可以使用注解
    -->
    <mappers>
        <!--<mapper resource="EmployeeMapper.xml"/>-->
        <!--<mapper class="com.atguigu.dao.EmployeeMapperAnnotation"/>-->

        <!-- 批量注册 -->
        <package name="com.atguigu.dao"/>
    </mappers>

</configuration>