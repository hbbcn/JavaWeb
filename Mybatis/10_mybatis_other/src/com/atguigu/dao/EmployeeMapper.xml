<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.dao.EmployeeMapper">

    <!--
    namespace: 名称空间当
    你的namespace绑定接口后，你可以不用写接口实现类，mybatis会通过该绑定自动
    帮你找到对应要执行的SQL语句
    id: 唯一标识
    resultType: 返回值类型
    #{id}: 从传递过来的参数种取出id值
    -->
    <select id="getEmpById" resultType="com.atguigu.mybatis.Employee">
     select * from tb_employee where id = #{id}
    </select>

    <select id="selectEmp" resultType="com.atguigu.mybatis.Employee">
     select * from tb_employee where id = #{id}
    </select>

    <select id="getEmps" resultType="com.atguigu.mybatis.Employee">
        select * from tb_employee
    </select>

    <insert id="addEmp">
        insert into tb_employee (name,gender,email)
         values(#{name},#{gender},#{email})
    </insert>

    <!--
    Oracle分页存储过程的实现
    使用select标签定义调用存储过程
    statementType="CALLABLE":表示要调用的存储过程
    {call procedure_name(params)}
    -->
    <select id="getPageByProducer" statementType="CALLABLE">
        {
          call hello_test(
            #{start,mode=IN,jdbcType=INTEGER},
            #{end,mode=IN,jdbcType=INTEGER},
            #{count,mode=OUT,jdbcType=INTEGER},
            #{emps,mode=OUT,jdbcType=CURSOR，javaType=ResultSet,resultMap=PageEmp}
          )
        }
    </select>
    <resultMap id="PageEmp" type="com.atguigu.dao.EmployeeMapper">
        <id column="employee_id" property="id"/>
        <result column="last_name" property="name"/>
        <result column="email" property="email"/>
    </resultMap>
</mapper>
